name: CI

on:
  schedule:
    - cron: "0 7 * * 1"
  push:
  pull_request:

env:
  CARGO_TERM_COLOR: always
  CARGO_INCREMENTAL: 0

permissions:
  contents: read

jobs:
  lint:
    timeout-minutes: 30
    continue-on-error: true
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository and submodules
        uses: actions/checkout@v3.1.0
        with:
          submodules: recursive

      - name: Prepare build environemnt
        uses: ./.github/actions/prepare-build-env

      - name: Run cargo clippy
        run: |
          cargo clippy --target wasm32-unknown-unknown \
            --tests --all-features -- --deny "warnings"
        #TODO: this should be integrated for PR builds
        #uses: actions-rs/clippy-check@v1.0.7
        #with:
        #  token: ${{ secrets.GITHUB_TOKEN }}
        #  args: --target wasm32-unknown-unknown --tests --all-features

  build:
    timeout-minutes: 30
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository and submodules
        uses: actions/checkout@v3.1.0
        with:
          submodules: recursive

      - name: Prepare build environemnt
        uses: ./.github/actions/prepare-build-env

      - name: Run wasm-pack build
        run: wasm-pack build --release --target web

      # no benefit currently in size. after compression the file gets bigger
      #- name: Run wasm-opt optimization
      #  run: |
      #    wget https://github.com/WebAssembly/binaryen/releases/download/version_110/binaryen-version_110-x86_64-linux.tar.gz
      #    tar zxf binaryen-version_110-x86_64-linux.tar.gz
      #    ./binaryen-version_110/bin/wasm-opt -Os -o pkg/wgpu_layers_bg.wasm pkg/wgpu_layers_bg.wasm

      - name: Check wasm artifact size
        run: |
          brotli -Z pkg/wgpu_layers_bg.wasm
          gzip -k pkg/wgpu_layers_bg.wasm
          [[ $(stat -c %s pkg/wgpu_layers_bg.wasm.br) -lt 100000 ]]

  unit-test:
    timeout-minutes: 30
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository and submodules
        uses: actions/checkout@v3.1.0
        with:
          submodules: recursive

      - name: Prepare build environemnt
        uses: ./.github/actions/prepare-build-env

      - name: Use libegl1-mesa latest
        uses: ./.github/actions/install-graphics-driver

      - name: Run cargo test
        run: |
          cargo test --target `rustc -vV | sed -n 's|host: ||p'` -- --nocapture

  integration-test:
    timeout-minutes: 30
    continue-on-error: true
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        #    browser: [chrome, firefox]
        browser: [chrome]
    steps:
      - name: Checkout repository and submodules
        uses: actions/checkout@v3.1.0
        with:
          submodules: recursive

      - name: Prepare build environemnt
        uses: ./.github/actions/prepare-build-env

      - name: Use libegl-mesa0 latest
        uses: ./.github/actions/install-graphics-driver

      #- name: Use firefox nightly
      #  if: matrix.browser == 'firefox'
      #  run: |
      #    sudo add-apt-repository ppa:ubuntu-mozilla-daily/ppa
      #    sudo apt-get update
      #    sudo apt-get install firefox-trunk

      #- run: /usr/bin/firefox-trunk -version
      - name: Run wasm-pack test
        run: wasm-pack test --${{ matrix.browser }} --headless --release --all-features --test '*'
